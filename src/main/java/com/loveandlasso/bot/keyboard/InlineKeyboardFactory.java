package com.loveandlasso.bot.keyboard;

import org.jetbrains.annotations.NotNull;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;

public class InlineKeyboardFactory {

    public static final String CALLBACK_TEST_MODE = "test_mode";

    public static final String CALLBACK_HELP_MODE = "help_mode";

    public static final String CALLBACK_CONTACT = "contact_button";

    public static final String CALLBACK_START_DIALOG = "start_dialog";

    public static final String CALLBACK_PREV = "prev_button";

    public static final String CALLBACK_NEXT = "next_button";

    public static final String CALLBACK_PAY = "pay_button";

    public static final String CALLBACK_MAIN_MENU = "mainMenu_button";

    @NotNull
    public static InlineKeyboardMarkup createTestModeKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ö–Ω–æ–ø–∫–∞ "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton testModeButton = new InlineKeyboardButton();
        testModeButton.setText("üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º");
        testModeButton.setCallbackData(CALLBACK_TEST_MODE);
        row1.add(testModeButton);
        rows.add(row1);

        markup.setKeyboard(rows);
        return markup;
    }

    @NotNull
    public static InlineKeyboardMarkup createHelpKeyboard() {
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        // –ö–Ω–æ–ø–∫–∞ —Å–≤—è–∑–∏ –¥–ª—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton contactButton = new InlineKeyboardButton();
        contactButton.setText("üìû –°–≤—è–∑–∞—Ç—å—Å—è");
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é URL-—Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
        contactButton.setUrl("https://t.me/Estreman");
        row1.add(contactButton);

        rowsInline.add(row1);
        markupInline.setKeyboard(rowsInline);

        return markupInline;
    }

    @NotNull
    public static InlineKeyboardMarkup createStartDialogKeyboard() {
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞
        List<InlineKeyboardButton> row = new ArrayList<>();
        InlineKeyboardButton startDialogButton = new InlineKeyboardButton();
        startDialogButton.setText("üöÄ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥");
        startDialogButton.setCallbackData(CALLBACK_START_DIALOG);
        row.add(startDialogButton);

        rowsInline.add(row);
        markupInline.setKeyboard(rowsInline);

        return markupInline;
    }

    @NotNull
    public static InlineKeyboardMarkup createNavigationWithPaymentKeyboard() {
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();

        InlineKeyboardButton prevButton = new InlineKeyboardButton();
        prevButton.setText("‚¨ÖÔ∏è");
        prevButton.setCallbackData(CALLBACK_PREV);
        row1.add(prevButton);

        InlineKeyboardButton payButton = new InlineKeyboardButton();
        payButton.setText("–û–ø–ª–∞—Ç–∏—Ç—å");
        payButton.setCallbackData(CALLBACK_PAY);
        row1.add(payButton);

        InlineKeyboardButton nextButton = new InlineKeyboardButton();
        nextButton.setText("‚û°Ô∏è");
        nextButton.setCallbackData(CALLBACK_NEXT);
        row1.add(nextButton);

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        InlineKeyboardButton mainMenu = new InlineKeyboardButton();
        mainMenu.setText("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
        mainMenu.setCallbackData(CALLBACK_MAIN_MENU);
        row2.add(mainMenu);

        rowsInline.add(row1);
        rowsInline.add(row2);
        markupInline.setKeyboard(rowsInline);

        return markupInline;
    }

    @NotNull
    public static InlineKeyboardMarkup createNavigationWithPaymentForFreeKeyboard() {
        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();

        InlineKeyboardButton prevButton = new InlineKeyboardButton();
        prevButton.setText("‚¨ÖÔ∏è");
        prevButton.setCallbackData(CALLBACK_PREV);
        row1.add(prevButton);

        InlineKeyboardButton payButton = new InlineKeyboardButton();
        payButton.setText("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å");
        payButton.setCallbackData(CALLBACK_PAY);
        row1.add(payButton);

        InlineKeyboardButton nextButton = new InlineKeyboardButton();
        nextButton.setText("‚û°Ô∏è");
        nextButton.setCallbackData(CALLBACK_NEXT);
        row1.add(nextButton);

        List<InlineKeyboardButton> row2 = new ArrayList<>();
        InlineKeyboardButton mainMenu = new InlineKeyboardButton();
        mainMenu.setText("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
        mainMenu.setCallbackData(CALLBACK_MAIN_MENU);
        row2.add(mainMenu);

        rowsInline.add(row1);
        rowsInline.add(row2);
        markupInline.setKeyboard(rowsInline);

        return markupInline;
    }
}
